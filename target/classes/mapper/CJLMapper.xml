<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jcww.training.mapper.CJLMapper">

    <!--题库/我的题库-->
    <sql id="ZiDuan">
        SELECT qt.questionid,
               qt.questionname,
               qucla.questionclassifyname,
               CASE qt.questiontype
                   WHEN '1' THEN '单选'
                   WHEN '2' THEN '多选'
                   WHEN '3' THEN '判断'
                   WHEN '4' THEN '填空'
                   WHEN '5' THEN '简答'
                   ELSE 'Error' END AS questiontype,
               qt.answer,
               qt.score,
               qt.createtime
        FROM question qt
                 LEFT JOIN questionclassify AS qucla ON qucla.questionclassifyid = qt.questionclassifyid
                 LEFT JOIN User AS us ON us.userid = qt.userid
    </sql>

    <sql id="ShareZiDuan">
        SELECT sr.questionid,
               sr.questionname,
               qucla.questionclassifyname,
               CASE sr.questiontype
                   WHEN '1' THEN
                       '单选'
                   WHEN '2' THEN
                       '多选'
                   WHEN '3' THEN
                       '判断'
                   WHEN '4' THEN
                       '填空'
                   WHEN '5' THEN
                       '简答'
                   ELSE
                       'Error'
                   END AS questiontype,
               sr.answer,
               sr.score,
               sr.createtime
        FROM share sr
                 LEFT JOIN questionclassify AS qucla ON qucla.questionclassifyid = sr.questionclassifyid
    </sql>

    <!--List<Question> QuestionBank(String uname);-->
    <select id="QuestionBank" resultType="com.jcww.training.pojo.Question">
        <include refid="ZiDuan"/>
        WHERE qt.questiontype = #{questiontype}
        ORDER BY qt.createtime DESC
    </select>

    <!--List<Question> MyQuestionBank(String myqus);//我的题库-->
    <!--
    <include refid="ZiDuan"/>
        WHERE us.truename = #{truename}
        ORDER BY qt.createtime desc
    -->
    <select id="MyQuestionBank" resultType="com.jcww.training.pojo.Question">
        SELECT *
        FROM (
        <include refid="ZiDuan"/>
        WHERE us.truename = #{truename}
        UNION ALL
        <include refid="ShareZiDuan"/>
        WHERE sr.createusername = #{createusername}
        ) AS a
    </select>

    <!--int danxuanAdd(Question question);-->
    <insert id="danxuanAdd">
        insert into question
        (
             questionid,
             questionname,
             questiontype,
             questionclassifyid,
             optiona,
             optionb,
             optionc,
             optiond,
             answer,
             score,
             createtime,
             createusername,
             userid,
             ownuser
         )
        VALUES
        (
             null,
             #{questionname},
             #{questiontype},
             #{questionclassifyid},
             #{optiona},
             #{optionb},
             #{optionc},
             #{optiond},
             #{answer},
             #{score},
             #{createtime},
             #{createusername},
             #{userid},
             #{ownuser}
         )
    </insert>

    <!--int perDel(@Param("questionid") Integer questionid);-->
    <delete id="perDel">
        DELETE qap,que
        FROM question que
                 LEFT JOIN questionandpaper qap
                           ON que.questionid = qap.questionid
        WHERE que.questionid = #{questionid}
    </delete>

    <!--Question ViewID(@Param("questionid") Integer questionid);-->
    <select id="ViewID" resultType="com.jcww.training.pojo.Question">
        SELECT qt.questionid,
               qt.questionname,
               qucla.questionclassifyid,
               qt.questiontype,
               qt.answer,
               qt.score,
               qt.createtime,
               qt.optiona,
               qt.optionb,
               qt.optionc,
               qt.optiond,
               qt.ownuser,
               CASE qt.isnotshare
                   WHEN '0' THEN '已共享'
                   WHEN '1' THEN '审核中'
                   ELSE '未共享' END AS isnotshare,
               createusername,
               userid
        FROM question qt
                 LEFT JOIN questionclassify AS qucla ON qucla.questionclassifyid = qt.questionclassifyid
        WHERE qt.questionid = #{questionid}
    </select>

    <!--int preup(Question question);-->
    <update id="preup">
        UPDATE question SET
        questionname=#{questionname},
        answer=#{answer},
        score=#{score},
        optiona=#{optiona},
        optionb=#{optionb},
        optionc=#{optionc},
        optiond=#{optiond},
        questionclassifyid=#{questionclassifyid},
        questiontype=#{questiontype}
        <where>
            <if test="questionid!=null and questionid!=0">
                questionid=#{questionid}
            </if>
        </where>
    </update>

    <!--List<Question> SharedQuestionBank();-->
    <select id="SharedQuestionBank" resultType="com.jcww.training.pojo.Question">
        <include refid="ZiDuan"/>
        WHERE qt.isnotshare = 0
        ORDER BY qt.createtime DESC
    </select>

    <!--List<Question> SharedQuestionBankshenhe();-->
    <select id="SharedQuestionBankshenhe" resultType="com.jcww.training.pojo.Question">
        <include refid="ZiDuan"/>
        WHERE qt.isnotshare = 1
        ORDER BY qt.createtime DESC
    </select>

    <!--int SharedTurnDown(Question question);-->
    <insert id="SharedTurnDown">
        UPDATE question set
        isnotshare=2
        <if test="questionid!=0 and questionid!=null">
            WHERE questionid = #{questionid}
        </if>
    </insert>

    <!--int SharedBy(Question question);-->
    <insert id="SharedBy">
        UPDATE question set
        isnotshare=0
        <if test="questionid!=0 and questionid!=null">
            WHERE questionid = #{questionid}
        </if>
    </insert>

    <!--int ApplicationSH(Question question);-->
    <insert id="ApplicationSH">
        UPDATE question set
        isnotshare=1
        <if test="questionid!=0 and questionid!=null">
            WHERE questionid = #{questionid}
        </if>
    </insert>

    <!--int AddShared(Share share);-->
    <insert id="AddShared">
        insert into share
        (
            questionid,
            isnotshare,
            userid,
            resolve,
            ownuser,
            questionname,
            questiontype,
            questionclassifyid,
            optiona,
            optionb,
            optionc,
            optiond,
            answer,
            score,
            createtime,
            createusername
        )
        VALUES
        (
            null,
            #{isnotshare},
            #{userid},
            #{resolve},
            #{ownuser},
            #{questionname},
            #{questiontype},
            #{questionclassifyid},
            #{optiona},
            #{optionb},
            #{optionc},
            #{optiond},
            #{answer},
            #{score},
            #{createtime},
            #{createusername}
        )
    </insert>

    <!--Share ViewName(@Param("questionname") String questionname,@Param("createusername") String createusername);-->
    <select id="ViewName" resultType="com.jcww.training.pojo.Share">
        select questionname,userid from share where questionname=#{questionname} and createusername=#{createusername}
    </select>

        <!--
        SELECT ques.questionname,
           ques.answer,
           ques.score,
           ques.optiona,
           ques.optionb,
           ques.optionc,
           ques.optiond,
           ques.questionclassifyid,
           ques.questiontype
    FROM question ques
    WHERE ques.questionclassifyid = 1
      and ques.questiontype >=
          ((SELECT MAX(ques.questionid) FROM question) - (SELECT MIN(ques.questionid) FROM question)) * RAND() +
          (SELECT MIN(ques.questionid) FROM question)
    LIMIT 5





    INSERT INTO question(
        userid
    )
    SELECT userid FROM user where userid = 1;

        -->
</mapper>